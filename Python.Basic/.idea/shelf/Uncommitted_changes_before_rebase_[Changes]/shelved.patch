Index: Lesson2/lesson2.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Lesson2/lesson2.py b/Lesson2/lesson2.py
new file mode 100644
--- /dev/null	(date 1647287697047)
+++ b/Lesson2/lesson2.py	(date 1647287697047)
@@ -0,0 +1,70 @@
+# 1
+my_first_list = [1, True, [1, 3, 6], 'some text', 4.45, 3, '45']
+for t in my_first_list:
+    print(type(t))
+
+
+# 2
+count = int(input("Введите длину списка: "))
+my_second_list = []
+for i in range(count):
+    my_second_list.append(input('Введите {}-й элемент: '.format(i + 1)))
+length = count - 1 if count % 2 else count
+for i in range(0, length, 2):
+    my_second_list[i], my_second_list[i + 1] = my_second_list[i + 1], my_second_list[i]
+print(my_second_list)
+
+# 3
+my_string = 'зима зима весна весна весна лето лето лето осень осень осень зима'
+request = int(input("Введите число месяца "))
+list_solution = my_string.split(' ')
+print(f'Время года (в списке) для {request}-го месяца: {list_solution[request - 1]}')
+dict_solution = {}
+for ind, el in enumerate(list_solution, 1):
+    dict_solution[ind] = el
+print(f'Время года (в словаре) для {request} -го месяца: {dict_solution[request]}')
+
+
+# 4
+request_1 = input("Введите строку из нескольких слов  ").split(" ")
+for ind, el in enumerate(request_1, 1):
+    print(ind, el[:10])
+
+
+# 5
+rating = [7, 5, 3, 3, 2, int(input("Введите рейтинг "))]
+print(rating.sort(reverse=True))
+
+
+# 6
+## Сбор данных
+dict_of_features = {
+    'название': 'Наименование товара',
+    'цена': 'Цена товара',
+    'количество': 'Количество',
+    'ед': 'Единица измерения'
+}
+items = []
+while True:
+    dict_item = dict()
+    for key in dict_of_features:
+        dict_item[key] = input(f'{dict_of_features[key]} ')
+    items.append(dict_item)
+    if input('Продолжить добавление? д/н ') == 'н':
+        break
+
+## Формирование структуры
+catalogue = []
+for position, item in enumerate(items, 1):
+    catalogue.append((position, item))
+print(catalogue)
+
+## Сбор аналитики
+analytics = dict_of_features.copy()
+for key in analytics:
+    analytics[key] = []
+for i in range(len(items)):
+    for key in analytics:
+        if items[i][key] not in analytics[key]:
+            analytics[key].append(items[i][key])
+print(analytics)
